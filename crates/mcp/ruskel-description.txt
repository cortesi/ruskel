**Ruskel Skeleton Generator** return a single Rust source file that lists the
*public API (or optionally private items) of any crate or module path, with all
bodies stripped*. Useful for large‑language models that need to look up item
names, signatures, derives, feature‑gated cfgs, and doc‑comments while writing
or reviewing Rust code.

### When a model should call this tool
1. It needs a function/trait/struct signature it can't recall.
2. The user asks for examples or docs from a crate.
3. The model wants to verify what features gate a symbol.

### Target syntax examples
- `serde`               →  latest serde on crates.io
- `serde@1.0.160`      →  specific published version
- `serde::de::Deserialize` →  narrow output to one module/type for small contexts
- `/path/to/crate` or `/path/to/crate::submod` →  local workspace paths

### Output format
Plain UTF‑8 text containing valid Rust code, with implementation omitted.

### Tips for LLMs
- Request deep module paths (e.g. `tokio::sync::mpsc`) to keep the reply below
  your token budget.
- Pass `all_features=true` or `features=[…]` when a symbol is behind a feature gate.
